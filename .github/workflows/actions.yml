name: build dist

on:
  push:
  pull_request:

jobs:
  linux-build:
    name: build on linux
    runs-on: ubuntu-24.04
    steps:
    - name: checkout
      uses: actions/checkout@v1
      with:
        submodules: recursive
    - name: apt update
      run: |
        sudo apt-get update
    - name: set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: 17
        distribution: temurin
    # ONLY FOR NEW RELEASE TAGS
    - name: setup gpg necessities
      if: startsWith(github.ref, 'refs/tags/')
      run: sudo bash -c "echo '$GPG_KEY_CONTENTS' | base64 -d > $WORKSPACE/'$SIGNING_SECRET_KEY_RING_FILE'"
      env:
        WORKSPACE: ${{ github.workspace }}
        GPG_KEY_CONTENTS: ${{ secrets.GPG_KEY_CONTENTS }}
        SIGNING_SECRET_KEY_RING_FILE: ${{ secrets.SIGNING_SECRET_KEY_RING_FILE }}
    # ONLY FOR NEW RELEASE TAGS
    - name: rewrite publish-pom.gradle to require signing
      if: startsWith(github.ref, 'refs/tags/')
      run: |
        sed -i "s/signing {}/signing { sign(publishing.publications) }/" publish-pom.gradle
    - name: cache AVD
      uses: actions/cache@v4
      env:
        cache-name: cache-avd
      with:
        path: /home/runner/.android/gradle/avd
        key: ${{ runner.os }}-gradle-avd
    - name: cache gradle caches
      uses: actions/cache@v4
      env:
        cache-name: cache-gradle-caches
      with:
        path: /home/runner/.gradle/caches/
        key: ${{ runner.os }}-gradle-caches
    - name: apt install
      run: |
        echo y | sudo apt-get install doxygen libxml2-dev libgrpc++-dev libgrpc-dev libprotobuf-dev protobuf-compiler protobuf-compiler-grpc graphviz cmake ninja-build
    # ONLY FOR NON-RELEASES
    - name: build
      if: ${{ !startsWith(github.ref, 'refs/tags/') }}
      run: ./gradlew build dokkaHtml publishToMavenLocal
    # ONLY FOR NEW RELEASE TAGS
    - name: publish
      if: startsWith(github.ref, 'refs/tags/')
      run: ./gradlew --warning-mode all publish dokkaHtml
      env:
        OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
        OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
        SIGNING_KEY_ID: ${{ secrets.SIGNING_KEY_ID }}
        SIGNING_PASSWORD: ${{ secrets.SIGNING_PASSWORD }}
        SIGNING_SECRET_KEY_RING_FILE: ${{ format('{0}/{1}', github.workspace, secrets.SIGNING_SECRET_KEY_RING_FILE) }}
    - name: run instrumented tests (disabled)
      if: false
      # > Gradle was not able to complete device setup for: dev30_google_x86_Pixel_5
      # > The emulator failed to open the managed device to generate the snapshot.
      # also https://github.com/actions/virtual-environments/issues/183
      run:
        ./gradlew testDevice1DebugAndroidTest || exit 1
        ./gradlew testDevice2DebugAndroidTest || exit 1
    - name: upload artifact
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: aap-core-apps-and-libs
        path: |
          ./*/build/outputs/aar/*.aar
          samples/*/build/outputs/apk/debug/*.apk
    # Create release, only for release tags
    - name: Create Release
      uses: ncipollo/release-action@v1
      if: success() && startsWith(github.ref, 'refs/tags/')
      with:
        artifacts: ./*/build/outputs/aar/*.aar,samples/*/build/outputs/apk/debug/*.apk
    # Update API reference, only for release tags
    - name: deploy to GitHub Pages
      if: ${{ success() && startsWith(github.ref, 'refs/tags/') }}
      uses: JamesIves/github-pages-deploy-action@v4
      with:
        branch: gh-pages
        folder: androidaudioplugin/build/dokka/html

  osx-build:
    name: build on osx
    runs-on: macos-14
    steps:
    - name: checkout
      uses: actions/checkout@v4
      with:
        submodules: recursive
    - name: set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: 17
        distribution: temurin
    - name: cache AVD
      uses: actions/cache@v4
      env:
        cache-name: cache-avd
      with:
        path: /Users/runner/.android/gradle/avd
        key: ${{ runner.os }}-gradle-avd
    - name: cache gradle caches
      uses: actions/cache@v4
      env:
        cache-name: cache-gradle-caches
      with:
        path: /Users/runner/.gradle/caches/
        key: ${{ runner.os }}-gradle-caches
    - name: install deps
      run: |
        brew install doxygen libxml2 ninja graphviz openssl
    - name: build
      run: ./gradlew build dokkaHtml publishToMavenLocal
      env:
        ANDROID_SDK_ROOT: /Users/runner/Library/Android/sdk
